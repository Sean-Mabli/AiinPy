{"title": ["aiinpy.binarystep", "aiinpy.conv", "aiinpy.convtranspose", "aiinpy.dropout", "aiinpy.gaussian", "aiinpy.gru", "aiinpy.identity", "aiinpy.leakyrelu", "aiinpy.lstm", "aiinpy.mish", "aiinpy.model", "aiinpy.neuroevolution", "aiinpy.nn", "aiinpy.pool", "aiinpy.relu", "aiinpy.rnn", "aiinpy.selu", "aiinpy.sigmoid", "aiinpy.silu", "aiinpy.softmax", "aiinpy.softplus", "aiinpy.stablesoftmax", "aiinpy.tanh", "aiinpy.texttobinary"], "source": ["aiinpybinarystep()", "aiinpyconv(self, InShape, FilterShape, LearningRate, Activation=identity, Padding=False, Stride=(1, 1))", "aiinpyconvtranspose(self, InShape, FilterShape, LearningRate, Activation, Padding=False, Stride=(1, 1))", "aiinpydropout(self, DropoutRate)", "aiinpygaussian()", "aiinpygru(self, InSize, OutSize, OutActivation, HidSize=64, LearningRate=0.05)", "aiinpyidentity()", "aiinpyleakyrelu(self, alpha=0.01)", "aiinpylstm(self, InSize, OutSize, OutActivation, HidSize=64, LearningRate=0.05)", "aiinpymish()", "aiinpymodel(self, InShape, OutShape, Model)", "aiinpyneuroevolution(self, InSize, OutSize, PopulationSize, Model)", "aiinpynn(self, InShape, OutShape, Activation, LearningRate, WeightsInit=(-1, 1), BiasesInit=(0, 0))", "aiinpypool(self, Stride, FilterShape, Type)", "aiinpyrelu()", "aiinpyrnn(self, InSize, OutSize, Type, OutActivation=stablesoftmax(), HidSize=64, LearningRate=0.05)", "aiinpyselu()", "aiinpysigmoid()", "aiinpysilu()", "aiinpysoftmax()", "aiinpysoftplus()", "aiinpystablesoftmax()", "aiinpytanh()", "aiinpytexttobinary()"], "url": ["binarystep", "conv", "convtranspose", "dropout", "gaussian", "gru", "identity", "leakyrelu", "lstm", "mish", "model", "neuroevolution", "nn", "pool", "relu", "rnn", "selu", "sigmoid", "silu", "softmax", "softplus", "stablesoftmax", "tanh", "texttobinary"]}