[
  {
    "0.0.0": [
      {
        "title": "aiinpy.RNN",
        "model": "aiinpy.RNN(self, InputSize, OutputSize, Type, HiddenSize=64, LearningRate=0.05)",
        "url": "/RNN",
        "id": "RNN"
      },
      {
        "title": "aiinpy.POOL",
        "model": "aiinpy.POOL(self, Stride)",
        "url": "/POOL",
        "id": "POOL"
      },
      {
        "title": "aiinpy.NN",
        "model": "aiinpy.NN(self, InputSize, OutputSize, Activation, LearningRate, WeightsInit=(-1, 1), BiasesInit=(0, 0))",
        "url": "/NN",
        "id": "NN"
      },
      {
        "title": "aiinpy.CONV",
        "model": "aiinpy.CONV(self, FilterShape, LearningRate, Padding='None', Stride=(1, 1))",
        "url": "/CONV",
        "id": "CONV"
      }
    ]
  },
  {
    "0.0.1": [
      {
        "title": "aiinpy.RNN",
        "model": "aiinpy.RNN(self, InputSize, OutputSize, Type, HiddenSize=64, LearningRate=0.05)",
        "url": "/RNN",
        "id": "RNN"
      },
      {
        "title": "aiinpy.POOL",
        "model": "aiinpy.POOL(self, Stride)",
        "url": "/POOL",
        "id": "POOL"
      },
      {
        "title": "aiinpy.NN",
        "model": "aiinpy.NN(self, InputSize, OutputSize, Activation, LearningRate, WeightsInit=(-1, 1), BiasesInit=(0, 0))",
        "url": "/NN",
        "id": "NN"
      },
      {
        "title": "aiinpy.CONV",
        "model": "aiinpy.CONV(self, FilterShape, LearningRate, Padding='None', Stride=(1, 1))",
        "url": "/CONV",
        "id": "CONV"
      }
    ]
  },
  {
    "0.0.2": [
      {
        "title": "aiinpy.RNN",
        "model": "aiinpy.RNN(self, InputSize, OutputSize, Type, HiddenSize=64, LearningRate=0.05)",
        "url": "/RNN",
        "id": "RNN"
      },
      {
        "title": "aiinpy.POOL",
        "model": "aiinpy.POOL(self, Stride)",
        "url": "/POOL",
        "id": "POOL"
      },
      {
        "title": "aiinpy.NN",
        "model": "aiinpy.NN(self, InputSize, OutputSize, Activation, LearningRate, WeightsInit=(-1, 1), BiasesInit=(0, 0))",
        "url": "/NN",
        "id": "NN"
      },
      {
        "title": "aiinpy.CONV",
        "model": "aiinpy.CONV(self, FilterShape, LearningRate, Padding='None', Stride=(1, 1))",
        "url": "/CONV",
        "id": "CONV"
      }
    ]
  },
  {
    "0.0.3": [
      {
        "title": "aiinpy.RNN",
        "model": "aiinpy.RNN(self, InputSize, OutputSize, Type, HiddenSize=64, LearningRate=0.05)",
        "url": "/RNN",
        "id": "RNN"
      },
      {
        "title": "aiinpy.POOL",
        "model": "aiinpy.POOL(self, Stride)",
        "url": "/POOL",
        "id": "POOL"
      },
      {
        "title": "aiinpy.NN",
        "model": "aiinpy.NN(self, InputSize, OutputSize, Activation, LearningRate, WeightsInit=(-1, 1), BiasesInit=(0, 0))",
        "url": "/NN",
        "id": "NN"
      },
      {
        "title": "aiinpy.CONV",
        "model": "aiinpy.CONV(self, FilterShape, LearningRate, Padding='None', Stride=(1, 1))",
        "url": "/CONV",
        "id": "CONV"
      }
    ]
  },
  {
    "0.0.4": [
      {
        "title": "aiinpy.RNN",
        "model": "aiinpy.RNN(self, InputSize, OutputSize, Type, HiddenSize=64, LearningRate=0.05)",
        "url": "/RNN",
        "id": "RNN"
      },
      {
        "title": "aiinpy.POOL",
        "model": "aiinpy.POOL(self, Stride)",
        "url": "/POOL",
        "id": "POOL"
      },
      {
        "title": "aiinpy.NN",
        "model": "aiinpy.NN(self, InputSize, OutputSize, Activation, LearningRate, WeightsInit=(-1, 1), BiasesInit=(0, 0))",
        "url": "/NN",
        "id": "NN"
      },
      {
        "title": "aiinpy.CONV",
        "model": "aiinpy.CONV(self, FilterShape, LearningRate, Padding='None', Stride=(1, 1))",
        "url": "/CONV",
        "id": "CONV"
      }
    ]
  },
  {
    "0.0.5": [
      {
        "title": "aiinpy.RNN",
        "model": "aiinpy.RNN(self, InputSize, OutputSize, Type, HiddenSize=64, LearningRate=0.05)",
        "url": "/RNN",
        "id": "RNN"
      },
      {
        "title": "aiinpy.POOL",
        "model": "aiinpy.POOL(self, Stride)",
        "url": "/POOL",
        "id": "POOL"
      },
      {
        "title": "aiinpy.NN",
        "model": "aiinpy.NN(self, InputSize, OutputSize, Activation, LearningRate, WeightsInit=(-1, 1), BiasesInit=(0, 0))",
        "url": "/NN",
        "id": "NN"
      },
      {
        "title": "aiinpy.CONV",
        "model": "aiinpy.CONV(self, FilterShape, LearningRate, Padding='None', Stride=(1, 1))",
        "url": "/CONV",
        "id": "CONV"
      }
    ]
  },
  {
    "0.0.6": [
      {
        "title": "aiinpy.RNN",
        "model": "aiinpy.RNN(self, InputSize, OutputSize, Type, HiddenSize=64, LearningRate=0.05)",
        "url": "/RNN",
        "id": "RNN"
      },
      {
        "title": "aiinpy.POOL",
        "model": "aiinpy.POOL(self, Stride)",
        "url": "/POOL",
        "id": "POOL"
      },
      {
        "title": "aiinpy.NN",
        "model": "aiinpy.NN(self, InputSize, OutputSize, Activation, LearningRate, WeightsInit=(-1, 1), BiasesInit=(0, 0))",
        "url": "/NN",
        "id": "NN"
      },
      {
        "title": "aiinpy.CONV",
        "model": "aiinpy.CONV(self, FilterShape, LearningRate, Padding='None', Stride=(1, 1))",
        "url": "/CONV",
        "id": "CONV"
      }
    ]
  },
  {
    "0.0.7": [
      {
        "title": "aiinpy.RNN",
        "model": "aiinpy.RNN(self, InputSize, OutputSize, Type, HiddenSize=64, LearningRate=0.05)",
        "url": "/RNN",
        "id": "RNN"
      },
      {
        "title": "aiinpy.POOL",
        "model": "aiinpy.POOL(self, Stride)",
        "url": "/POOL",
        "id": "POOL"
      },
      {
        "title": "aiinpy.NN",
        "model": "aiinpy.NN(self, InputSize, OutputSize, Activation, LearningRate, WeightsInit=(-1, 1), BiasesInit=(0, 0))",
        "url": "/NN",
        "id": "NN"
      },
      {
        "title": "aiinpy.CONV",
        "model": "aiinpy.CONV(self, FilterShape, LearningRate, Padding='None', Stride=(1, 1))",
        "url": "/CONV",
        "id": "CONV"
      }
    ]
  },
  {
    "0.0.8": [
      {
        "title": "aiinpy.RNN",
        "model": "aiinpy.RNN(self, InputSize, OutputSize, Type, HiddenSize=64, LearningRate=0.05)",
        "url": "/RNN",
        "id": "RNN"
      },
      {
        "title": "aiinpy.POOL",
        "model": "aiinpy.POOL(self, Stride)",
        "url": "/POOL",
        "id": "POOL"
      },
      {
        "title": "aiinpy.NN",
        "model": "aiinpy.NN(self, InputSize, OutputSize, Activation, LearningRate, WeightsInit=(-1, 1), BiasesInit=(0, 0))",
        "url": "/NN",
        "id": "NN"
      },
      {
        "title": "aiinpy.CONV",
        "model": "aiinpy.CONV(self, FilterShape, LearningRate, Padding='None', Stride=(1, 1))",
        "url": "/CONV",
        "id": "CONV"
      }
    ]
  },
  {
    "0.0.9": [
      {
        "title": "aiinpy.RNN",
        "model": "aiinpy.RNN(self, InputSize, OutputSize, Type, HiddenSize=64, LearningRate=0.05)",
        "url": "/RNN",
        "id": "RNN"
      },
      {
        "title": "aiinpy.POOL",
        "model": "aiinpy.POOL(self, Stride)",
        "url": "/POOL",
        "id": "POOL"
      },
      {
        "title": "aiinpy.NN",
        "model": "aiinpy.NN(self, InputSize, OutputSize, Activation, LearningRate, WeightsInit=(-1, 1), BiasesInit=(0, 0))",
        "url": "/NN",
        "id": "NN"
      },
      {
        "title": "aiinpy.CONV",
        "model": "aiinpy.CONV(self, FilterShape, LearningRate, Padding='None', Stride=(1, 1))",
        "url": "/CONV",
        "id": "CONV"
      }
    ]
  },
  {
    "0.0.10": [
      {
        "title": "aiinpy.RNN",
        "model": "aiinpy.RNN(self, InputSize, OutputSize, Type, HiddenSize=64, LearningRate=0.05)",
        "url": "/RNN",
        "id": "RNN"
      },
      {
        "title": "aiinpy.POOL",
        "model": "aiinpy.POOL(self, Stride)",
        "url": "/POOL",
        "id": "POOL"
      },
      {
        "title": "aiinpy.NN",
        "model": "aiinpy.NN(self, InputSize, OutputSize, Activation, LearningRate, WeightsInit=(-1, 1), BiasesInit=(0, 0))",
        "url": "/NN",
        "id": "NN"
      },
      {
        "title": "aiinpy.CONV",
        "model": "aiinpy.CONV(self, FilterShape, LearningRate, Padding='None', Stride=(1, 1))",
        "url": "/CONV",
        "id": "CONV"
      }
    ]
  },
  {
    "0.0.11": [
      {
        "title": "aiinpy.RNN",
        "model": "aiinpy.RNN(self, InputSize, OutputSize, Type, HiddenSize=64, LearningRate=0.05)",
        "url": "/RNN",
        "id": "RNN"
      },
      {
        "title": "aiinpy.POOL",
        "model": "aiinpy.POOL(self, Stride)",
        "url": "/POOL",
        "id": "POOL"
      },
      {
        "title": "aiinpy.NN",
        "model": "aiinpy.NN(self, InputSize, OutputSize, Activation, LearningRate, WeightsInit=(-1, 1), BiasesInit=(0, 0))",
        "url": "/NN",
        "id": "NN"
      },
      {
        "title": "aiinpy.CONV",
        "model": "aiinpy.CONV(self, FilterShape, LearningRate, Padding='None', Stride=(1, 1))",
        "url": "/CONV",
        "id": "CONV"
      }
    ]
  },
  {
    "0.0.12": [
      {
        "title": "aiinpy.RNN",
        "model": "aiinpy.RNN(self, InputSize, OutputSize, Type, HiddenSize=64, LearningRate=0.05)",
        "url": "/RNN",
        "id": "RNN"
      },
      {
        "title": "aiinpy.POOL",
        "model": "aiinpy.POOL(self, Stride)",
        "url": "/POOL",
        "id": "POOL"
      },
      {
        "title": "aiinpy.NN",
        "model": "aiinpy.NN(self, InputSize, OutputSize, Activation, LearningRate, WeightsInit=(-1, 1), BiasesInit=(0, 0))",
        "url": "/NN",
        "id": "NN"
      },
      {
        "title": "aiinpy.CONV",
        "model": "aiinpy.CONV(self, FilterShape, LearningRate, Padding='None', Stride=(1, 1))",
        "url": "/CONV",
        "id": "CONV"
      }
    ]
  },
  {
    "0.0.13": [
      {
        "title": "aiinpy.RNN",
        "model": "aiinpy.RNN(self, InputSize, OutputSize, Type, HiddenSize=64, LearningRate=0.05)",
        "url": "/RNN",
        "id": "RNN"
      },
      {
        "title": "aiinpy.POOL",
        "model": "aiinpy.POOL(self, Stride)",
        "url": "/POOL",
        "id": "POOL"
      },
      {
        "title": "aiinpy.NN",
        "model": "aiinpy.NN(self, InputSize, OutputSize, Activation, LearningRate, WeightsInit=(-1, 1), BiasesInit=(0, 0))",
        "url": "/NN",
        "id": "NN"
      },
      {
        "title": "aiinpy.CONV",
        "model": "aiinpy.CONV(self, FilterShape, LearningRate, Padding='None', Stride=(1, 1))",
        "url": "/CONV",
        "id": "CONV"
      }
    ]
  },
  {
    "0.0.14": [
      {
        "title": "aiinpy.RNN",
        "model": "aiinpy.RNN(self, InputSize, OutputSize, Type, HiddenSize=64, LearningRate=0.05)",
        "url": "/RNN",
        "id": "RNN"
      },
      {
        "title": "aiinpy.POOL",
        "model": "aiinpy.POOL(self, Stride)",
        "url": "/POOL",
        "id": "POOL"
      },
      {
        "title": "aiinpy.NN",
        "model": "aiinpy.NN(self, InputSize, OutputSize, Activation, LearningRate, WeightsInit=(-1, 1), BiasesInit=(0, 0))",
        "url": "/NN",
        "id": "NN"
      },
      {
        "title": "aiinpy.CONV",
        "model": "aiinpy.CONV(self, FilterShape, LearningRate, Padding='None', Stride=(1, 1))",
        "url": "/CONV",
        "id": "CONV"
      }
    ]
  },
  {
    "0.0.15": [
      {
        "title": "aiinpy.RNN",
        "model": "aiinpy.RNN(self, InputSize, OutputSize, Type, HiddenSize=64, LearningRate=0.05)",
        "url": "/RNN",
        "id": "RNN"
      },
      {
        "title": "aiinpy.POOL",
        "model": "aiinpy.POOL(self, Stride)",
        "url": "/POOL",
        "id": "POOL"
      },
      {
        "title": "aiinpy.NN",
        "model": "aiinpy.NN(self, InputSize, OutputSize, Activation, LearningRate, WeightsInit=(-1, 1), BiasesInit=(0, 0))",
        "url": "/NN",
        "id": "NN"
      },
      {
        "title": "aiinpy.CONV",
        "model": "aiinpy.CONV(self, FilterShape, LearningRate, Padding='None', Stride=(1, 1))",
        "url": "/CONV",
        "id": "CONV"
      }
    ]
  },
  {
    "0.0.16": [
      {
        "title": "aiinpy.RNN",
        "model": "aiinpy.RNN(self, InputSize, OutputSize, Type, HiddenSize=64, LearningRate=0.05)",
        "url": "/RNN",
        "id": "RNN"
      },
      {
        "title": "aiinpy.POOL",
        "model": "aiinpy.POOL(self, Stride)",
        "url": "/POOL",
        "id": "POOL"
      },
      {
        "title": "aiinpy.NN",
        "model": "aiinpy.NN(self, InputSize, OutputSize, Activation, LearningRate, WeightsInit=(-1, 1), BiasesInit=(0, 0))",
        "url": "/NN",
        "id": "NN"
      },
      {
        "title": "aiinpy.CONV",
        "model": "aiinpy.CONV(self, FilterShape, LearningRate, Padding='None', Stride=(1, 1))",
        "url": "/CONV",
        "id": "CONV"
      }
    ]
  }
]